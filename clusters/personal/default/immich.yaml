apiVersion: v1
kind: PersistentVolume
metadata:
  name: nfs-pv-immich
spec:
  capacity:
    storage: 2000Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  nfs:
    server: files.cappyt.sh
    path: "/volume1/Kubernetes/Immich"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nfs-pvc-immich
  namespace: default
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 300Gi 
  storageClassName: ""
  volumeName: nfs-pv-immich
---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: immich-cluster
  namespace: default
spec:
  postgresql:
    shared_preload_libraries:
      - "vchord.so"
  bootstrap:
    initdb:
      postInitSQL:
        - CREATE EXTENSION IF NOT EXISTS vchord CASCADE;
        - CREATE EXTENSION IF NOT EXISTS cube CASCADE;
        - CREATE EXTENSION IF NOT EXISTS earthdistance CASCADE;
  imagePullPolicy: Always
  imageName: ghcr.io/tensorchord/cloudnative-vectorchord:17-0.4.2
  instances: 3
  storage:
    size: 15Gi
    storageClass: single
  monitoring:
    disableDefaultQueries: false
    enablePodMonitor: true
  backup:
    target: prefer-standby
    volumeSnapshot:
      online: true
      snapshotOwnerReference: none
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich-ml
  namespace: default
spec:
  selector:
    matchLabels:
      app: immich-ml
  template:
    metadata:
      labels:
        app: immich-ml
    spec:
      volumes:
      - name: model-cache
        persistentVolumeClaim:
          claimName: immich-model-cache
      containers:
      - name: immich-ml
        image: ghcr.io/immich-app/immich-machine-learning:v2.1.0
        args:
            - python
            - -m
            - immich_ml
            - DEVICE=CPU
        env:
          - name: IMMICH_PORT
            value: "3003"
        volumeMounts:
          - mountPath: /cache
            name: model-cache
        resources:
          limits:
            memory: "2Gi"
            cpu: "2000m"
          requests:
            memory: "128Mi"
            cpu: "100m"
        ports:
        - containerPort: 3003
---
apiVersion: v1
kind: Service
metadata:
  name: immich-ml
  namespace: default
spec:
  selector:
    app: immich-ml
  ports:
  - port: 3003
    targetPort: 3003
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: immich-model-cache
  namespace: default
spec:
  resources:
    requests:
      storage: 20Gi
  accessModes:
    - ReadWriteOnce
  storageClassName: replica
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich
  namespace: default
spec:
  selector:
    matchLabels:
      app: immich
  template:
    metadata:
      labels:
        app: immich
    spec:
      volumes:
      - name: library
        persistentVolumeClaim:
          claimName: nfs-pvc-immich
      - name: dri-device
        hostPath:
          path: /dev/dri
          type: Directory
      containers:
      - name: immich
        image: ghcr.io/immich-app/immich-server:v2.0.1
        ports:
        - name: http
          containerPort: 2283
          protocol: TCP
        - name: metrics-api
          containerPort: 8081
          protocol: TCP
        - name: metrics-ms
          containerPort: 8082
          protocol: TCP
        env:
          - name: DB_DATABASE_NAME
            valueFrom:
              secretKeyRef:
                key: dbname
                name: immich-cluster-app
          - name: DB_HOSTNAME
            valueFrom:
              secretKeyRef:
                key: host
                name: immich-cluster-app
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: immich-cluster-app
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: user
                name: immich-cluster-app
          - name: IMMICH_MACHINE_LEARNING_URL
            value: "http://immich-ml.default.svc.cluster.local:3003"
          - name: IMMICH_TELEMETRY_INCLUDE
            value: all
          - name: REDIS_HOSTNAME
            value: immich-dragonfly
          - name: IMMICH_PORT
            value: "2283"
        resources:
          requests:
            cpu: 100m
            memory: 300Mi
          limits:
            cpu: 2000m
            memory: 4Gi
        volumeMounts:
          - name: library
            mountPath: /usr/src/app/upload
          - mountPath: /dev/dri
            name: dri-device
        livenessProbe:
          httpGet:
            path: /api/server/ping
            port: http
            scheme: HTTP
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/server/ping
            port: http
            scheme: HTTP
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /api/server/ping
            port: http
            scheme: HTTP
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 30
---
apiVersion: v1
kind: Service
metadata:
  name: immich
  namespace: default
spec:
  selector:
    app: immich
  ports:
  - port: 2283
    targetPort: http
    name: http
  - port: 8081
    targetPort: metrics-api
    name: metrics-api
  - port: 8082
    targetPort: metrics-ms
    name: metrics-ms
---
apiVersion: dragonflydb.io/v1alpha1
kind: Dragonfly
metadata:
  name: immich-dragonfly
  namespace: default
spec:
  args:
    - "--default_lua_flags=allow-undeclared-keys"
  replicas: 1
  resources:
    requests:
      cpu: 500m
      memory: 500Mi
    limits:
      cpu: 600m
      memory: 750Mi
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: immich-route
  namespace: default
spec:
  hostnames:
    - immich.cappyt.sh
  parentRefs:
  - name: public-gateway
    namespace: kube-system
  rules:
  - backendRefs:
    - name: immich
      port: 2283
---
apiVersion: externaldns.k8s.io/v1alpha1
kind: DNSEndpoint
metadata:
  name: immich-dns
  namespace: default
spec:
  endpoints:
  - dnsName: immich.cappyt.sh
    recordTTL: 180
    recordType: A
    targets:
    - 185.242.182.145
    providerSpecific:
      - name: external-dns.alpha.kubernetes.io/cloudflare-proxied
        value: "false"