apiVersion: v1
kind: PersistentVolume
metadata:
  name: nfs-pv-immich
spec:
  capacity:
    storage: 2000Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  nfs:
    server: files.cappyt.sh
    path: "/volume1/Kubernetes/Immich"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nfs-pvc-immich
  namespace: default
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 300Gi 
  storageClassName: ""
  volumeName: nfs-pv-immich
---
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: immich-cluster
  namespace: default
spec:
  postgresql:
    parameters:
      max_slot_wal_keep_size: "30GB"
    shared_preload_libraries:
      - "vchord.so"
  imagePullPolicy: Always
  imageName: ghcr.io/tensorchord/cloudnative-vectorchord:14-0.4.3
  instances: 3
  storage:
    size: 15Gi
    storageClass: local-single
  monitoring:
    disableDefaultQueries: false
    enablePodMonitor: true
  backup:
    target: prefer-standby
    volumeSnapshot:
      online: true
      snapshotOwnerReference: none
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich
  namespace: default
spec:
  selector:
    matchLabels:
      app: immich
  template:
    metadata:
      labels:
        app: immich
    spec:
      volumes:
      - name: config
        configMap:
          name: immich-config
          defaultMode: 420
      - name: library
        persistentVolumeClaim:
          claimName: nfs-pvc-immich
      containers:
      - name: immich
        image: ghcr.io/immich-app/immich-server:v1.119.0
        ports:
        - name: http
          containerPort: 2283
          protocol: TCP
        - name: metrics-api
          containerPort: 8081
          protocol: TCP
        - name: metrics-ms
          containerPort: 8082
          protocol: TCP
        env:
          - name: DB_DATABASE_NAME
            valueFrom:
              secretKeyRef:
                key: dbname
                name: immich-cluster-app
          - name: DB_HOSTNAME
            valueFrom:
              secretKeyRef:
                key: host
                name: immich-cluster-app
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                key: password
                name: immich-cluster-app
          - name: DB_USERNAME
            valueFrom:
              secretKeyRef:
                key: user
                name: immich-cluster-app
          - name: IMMICH_CONFIG_FILE
            value: /config/immich-config.yaml
#          - name: IMMICH_MACHINE_LEARNING_URL
          - name: IMMICH_TELEMETRY_INCLUDE
            value: all
          - name: REDIS_HOSTNAME
            value: immich-dragonfly
          - name: IMMICH_PORT
            value: "2283"
        resources:
          requests:
            cpu: 100m
            memory: 300Mi
          limits:
            cpu: 500m
            memory: 2Gi
        volumeMounts:
          - name: config
            mountPath: /config
          - name: library
            mountPath: /usr/src/app/upload
        livenessProbe:
          httpGet:
            path: /api/server/ping
            port: http
            scheme: HTTP
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/server/ping
            port: http
            scheme: HTTP
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /api/server/ping
            port: http
            scheme: HTTP
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 30
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: immich-config
  namespace: default
data:
  immich-config.yaml: |
    trash:
      enabled: false
      days: 30
---
apiVersion: v1
kind: Service
metadata:
  name: immich
  namespace: default
spec:
  selector:
    app: immich
  ports:
  - port: 2283
    targetPort: http
    name: http
  - port: 8081
    targetPort: metrics-api
    name: metrics-api
  - port: 8082
    targetPort: metrics-ms
    name: metrics-ms
---
apiVersion: dragonflydb.io/v1alpha1
kind: Dragonfly
metadata:
  name: immich-dragonfly
  namespace: default
spec:
  replicas: 1
  resources:
    requests:
      cpu: 500m
      memory: 500Mi
    limits:
      cpu: 600m
      memory: 750Mi
